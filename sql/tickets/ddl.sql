-- MySQL Script generated by MySQL Workbench
-- Sat Sep 21 08:02:28 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tickets` ;

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tickets` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
USE `tickets` ;

-- -----------------------------------------------------
-- Table `tickets`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`user` ;

CREATE TABLE IF NOT EXISTS `tickets`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` CHAR(100) NOT NULL,
  `username` CHAR(10) NOT NULL,
  `password` CHAR(50) NOT NULL,
  `is_agent` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`category` ;

CREATE TABLE IF NOT EXISTS `tickets`.`category` (
  `name` CHAR(40) NOT NULL,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`ticket` ;

CREATE TABLE IF NOT EXISTS `tickets`.`ticket` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL,
  `description` VARCHAR(2000) NULL,
  `status` CHAR(12) NOT NULL,
  `user_id` INT NOT NULL,
  `category_name` CHAR(40) NOT NULL,
  `skapad_datum` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `file_data` LONGBLOB NULL,
  `file_name` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ticket_agent_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_ticket_category1_idx` (`category_name` ASC) VISIBLE,
  CONSTRAINT `fk_ticket_agent0`
    FOREIGN KEY (`user_id`)
    REFERENCES `tickets`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_category1`
    FOREIGN KEY (`category_name`)
    REFERENCES `tickets`.`category` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- Procedures

DROP PROCEDURE IF EXISTS select_from_db;

DELIMITER ;;

CREATE PROCEDURE select_from_db(
    IN to_get CHAR(20),
    IN num INTEGER(3)
)
BEGIN
  IF to_get = 'categories' THEN
    SELECT * FROM category;
  ELSEIF to_get = 'ticket-info' THEN
    SELECT
      id,
      title,
      status,
      description,
      category_name AS category,
      skapad_datum,
      status
        FROM ticket;
  ELSEIF to_get = 'ticket-info-one' THEN
    SELECT
      t.id AS id,
      t.title,
      t.description,
      t.category_name AS category,
      t.skapad_datum,
      u.name,
      u.username,
      t.status,
      t.file_data,
      t.file_name
    FROM
      ticket t
    INNER JOIN
      user u ON u.id = t.user_id
    WHERE
      num = t.id;
  END IF;
END
;;

DELIMITER ;

DROP PROCEDURE IF EXISTS createTicket;

DELIMITER ;;

CREATE PROCEDURE createTicket(
  title VARCHAR(45),
  `desc` VARCHAR(2000),
  category CHAR(40),
  `file` LONGBLOB,
  `file_name` BLOB
)
BEGIN
  INSERT INTO ticket (title, description, status, user_id, category_name, file_data, file_name)
    VALUES
      (title, `desc`, 'Open', 31, category, `file`, file_name);
END
;;

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
